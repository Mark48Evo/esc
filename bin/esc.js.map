{"version":3,"file":"esc.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable no-console */\nimport Debug from 'debug';\nimport amqplib from 'amqplib';\nimport SerialPort from 'serialport';\nimport { createClient } from 'redis';\nimport VescProtocolGenerator from '@mark48evo/vesc-protocol-generator';\nimport VescProtocolParser from '@mark48evo/vesc-protocol-parser';\nimport VescPacketParser from '@mark48evo/vesc-packet-parser';\nimport UsbSerialPortDeviceLister from '@mark48evo/usb-serialport-device-lister';\nimport SystemEvents from '@mark48evo/system-events';\nimport SystemState from '@mark48evo/system-state';\nimport SystemEsc from '@mark48evo/system-esc';\n\nasync function main() {\n  const debug = Debug('esc');\n\n  const config = {\n    rabbitmqHost: process.env.RABBITMQ_HOST || 'amqp://localhost',\n    redisURL: process.env.REDIS_URL || 'redis://127.0.0.1:6379/3',\n  };\n\n  const serialPortError = (err) => {\n    console.error(`SerialPort Error: ${err}`);\n  };\n\n  const rabbitmqConnect = await amqplib.connect(config.rabbitmqHost);\n  const rabbitmqChannel = await rabbitmqConnect.createChannel();\n  const redis = createClient(config.redisURL);\n\n  const systemEvents = await SystemEvents(rabbitmqChannel, { consume: false });\n  const systemState = await SystemState(redis, rabbitmqChannel, { consume: false });\n  const systemEsc = await SystemEsc(rabbitmqChannel, { consume: false });\n\n  const usbListener = new UsbSerialPortDeviceLister({\n    filters: [{\n      vendorId: '0483',\n      productId: '5740',\n    }],\n  });\n\n  const vescProtocolParser = new VescProtocolParser();\n  const vescPacketParser = new VescPacketParser();\n\n  vescPacketParser.on('data', (packet) => {\n    switch (packet.type) {\n      case 'COMM_GET_VALUES':\n        systemEsc.publish(\n          'stats',\n          {\n            ...packet.payload,\n            timestamp: Date.now(),\n          },\n        );\n        break;\n\n      default:\n        debug(`Received unhandled packet type: \"${packet.type}\"`);\n        break;\n    }\n  });\n\n  vescProtocolParser.pipe(vescPacketParser);\n\n  usbListener.on('attach', (device) => {\n    debug(`ESC Device found at \"${device.comName}\"`);\n    systemEvents.publish('esc.usb.connected', device);\n    systemState.set('esc.usb.found', true);\n\n    const serialPort = new SerialPort(device.comName, {\n      baudRate: 921600,\n      autoOpen: false,\n    });\n\n    serialPort.on('error', (err) => {\n      serialPortError(err);\n    });\n\n    serialPort.open((err) => {\n      if (err) {\n        return serialPortError(err);\n      }\n\n      systemState.set('esc.usb.connected', true);\n\n      serialPort.pipe(vescProtocolParser);\n\n      return setInterval(() => {\n        serialPort.write(VescProtocolGenerator(Buffer.from([0x04])));\n      }, 100);\n    });\n  });\n\n  usbListener.on('detach', (device) => {\n    debug(`ESC Device disconnected at \"${device.comName}\"`);\n    systemEvents.publish('esc.usb.disconnected', device);\n  });\n\n  usbListener.start();\n}\n\nmain().catch(e => console.log(e));\n"],"names":["main","debug","Debug","config","process","env","RABBITMQ_HOST","REDIS_URL","serialPortError","err","error","rabbitmqConnect","amqplib","connect","rabbitmqHost","rabbitmqChannel","createChannel","redis","createClient","redisURL","systemEvents","SystemEvents","systemState","SystemState","systemEsc","SystemEsc","usbListener","UsbSerialPortDeviceLister","vescProtocolParser","VescProtocolParser","vescPacketParser","VescPacketParser","on","packet","type","publish","payload","Date","now","pipe","device","comName","set","serialPort","SerialPort","open","setInterval","write","VescProtocolGenerator","Buffer","from","start","catch","e","console","log"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAYA,eAAeA,IAAf,GAAsB;QACdC,QAAQC,MAAM,KAAN,CAAd;QAEMC,SAAS;kBACCC,QAAQC,GAAR,CAAYC,aAAZ,IAA6B,kBAD9B;cAEHF,QAAQC,GAAR,CAAYE,SAAZ,IAAyB;GAFrC;;QAKMC,kBAAmBC,GAAD,IAAS;YACvBC,KAAR,CAAe,qBAAoBD,GAAI,EAAvC;GADF;;QAIME,kBAAkB,MAAMC,QAAQC,OAAR,CAAgBV,OAAOW,YAAvB,CAA9B;QACMC,kBAAkB,MAAMJ,gBAAgBK,aAAhB,EAA9B;QACMC,WAAQC,mBAAaf,OAAOgB,QAApB,CAAd;QAEMC,eAAe,MAAMC,aAAaN,eAAb,EAA8B;aAAW;GAAzC,CAA3B;QACMO,cAAc,MAAMC,YAAYN,QAAZ,EAAmBF,eAAnB,EAAoC;aAAW;GAA/C,CAA1B;QACMS,YAAY,MAAMC,UAAUV,eAAV,EAA2B;aAAW;GAAtC,CAAxB;QAEMW,cAAc,IAAIC,yBAAJ,CAA8B;aACvC,CAAC;gBACE,MADF;iBAEG;KAFJ;GADS,CAApB;QAOMC,qBAAqB,IAAIC,kBAAJ,EAA3B;QACMC,mBAAmB,IAAIC,gBAAJ,EAAzB;mBAEiBC,EAAjB,CAAoB,MAApB,EAA6BC,MAAD,IAAY;YAC9BA,OAAOC,IAAf;WACO,iBAAL;kBACYC,OAAV,CACE,OADF,EAEE,EACE,GAAGF,OAAOG,OADZ;qBAEaC,KAAKC,GAAL;SAJf;;;;cAUO,oCAAmCL,OAAOC,IAAK,GAAtD;;;GAbN;qBAkBmBK,IAAnB,CAAwBT,gBAAxB;cAEYE,EAAZ,CAAe,QAAf,EAA0BQ,MAAD,IAAY;UAC5B,wBAAuBA,OAAOC,OAAQ,GAA7C;iBACaN,OAAb,CAAqB,mBAArB,EAA0CK,MAA1C;gBACYE,GAAZ,CAAgB,eAAhB,EAAiC,IAAjC;UAEMC,aAAa,IAAIC,UAAJ,CAAeJ,OAAOC,OAAtB,EAA+B;gBACtC,MADsC;gBAEtC;KAFO,CAAnB;eAKWT,EAAX,CAAc,OAAd,EAAwBvB,GAAD,IAAS;sBACdA,GAAhB;KADF;eAIWoC,IAAX,CAAiBpC,GAAD,IAAS;UACnBA,GAAJ,EAAS;eACAD,gBAAgBC,GAAhB,CAAP;;;kBAGUiC,GAAZ,CAAgB,mBAAhB,EAAqC,IAArC;iBAEWH,IAAX,CAAgBX,kBAAhB;aAEOkB,YAAY,MAAM;mBACZC,KAAX,CAAiBC,sBAAsBC,OAAOC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAtB,CAAjB;OADK,EAEJ,GAFI,CAAP;KATF;GAdF;cA6BYlB,EAAZ,CAAe,QAAf,EAA0BQ,MAAD,IAAY;UAC5B,+BAA8BA,OAAOC,OAAQ,GAApD;iBACaN,OAAb,CAAqB,sBAArB,EAA6CK,MAA7C;GAFF;cAKYW,KAAZ;;;AAGFnD,OAAOoD,KAAP,CAAaC,KAAKC,QAAQC,GAAR,CAAYF,CAAZ,CAAlB"}